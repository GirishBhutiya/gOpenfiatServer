// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "This API can be used as health check for this application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brocker"
                ],
                "summary": "This API can be used as health check for this application.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Verify OTP which you get after register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "LoginResponse",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AuthPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "This API is used to register user with Phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "This API is used to register user with Phone number",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/renew-accesstoken": {
            "post": {
                "description": "This API is used to renew accesstoken using refreshtoken which you will get in verifyotp API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "This API is used to renew accesstoken using refreshtoken which you will get in verifyotp API.",
                "parameters": [
                    {
                        "description": "renewAccessTokenResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.renewAccessTokenRequests"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/create-buy-order": {
            "post": {
                "description": "Create a new order with status pending and type buy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create a new buy order",
                "parameters": [
                    {
                        "description": "model.OrderHandler",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderHandler"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/create-group": {
            "post": {
                "description": "This API is used to create a new group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Create A New Group",
                "parameters": [
                    {
                        "description": "model.GroupUser",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/create-sell-order": {
            "post": {
                "description": "Create a new order with status pending and type sell",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create a new sell order",
                "parameters": [
                    {
                        "description": "model.OrderHandler",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderHandler"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/create-trade": {
            "post": {
                "description": "This Api is used create a new trade",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade"
                ],
                "summary": "Create Trade",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TradeHandlerUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/creatinvitelink": {
            "post": {
                "description": "This API is used to create group invite ley",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create Group Invite Link",
                "parameters": [
                    {
                        "description": "model.InviteLink",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InviteLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/delete-group": {
            "post": {
                "description": "This API is used to delete group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Delete Group",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/getgroups": {
            "post": {
                "description": "This API is used to get all groups which are releted to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get All Groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserGroups"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/getorders": {
            "post": {
                "description": "This API is used to get all orders which are releted to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get All Orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Order"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/getordertrades": {
            "post": {
                "description": "This API is used to get all trades which are releted to order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get Order Trades",
                "parameters": [
                    {
                        "description": "[]model.TradeHandler",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TradeHandler"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/invite": {
            "get": {
                "description": "This API is used to subscribe group via invite link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Subscribe Group Via Invite",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/order-delete": {
            "post": {
                "description": "Delete an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/subscribe": {
            "post": {
                "description": "This API is used to subscribe to group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Subscribe Group To USer",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/trade-confirm": {
            "post": {
                "description": "This Api is used to change the trade status to confirm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade"
                ],
                "summary": "ConfirmTrade",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "trade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TradeUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/trade-confirming": {
            "post": {
                "description": "This Apis is used to change the trade status to confirming",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade"
                ],
                "summary": "ConfirmingTrade",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "trade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TradeUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/trade-delete": {
            "post": {
                "description": "Delete an trade",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade"
                ],
                "summary": "Delete an trade",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "trade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TradeUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/trade-disputed": {
            "post": {
                "description": "This API is used to change the trade status to disputed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade"
                ],
                "summary": "DisputedTrade",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "trade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TradeUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/unsubscribe": {
            "post": {
                "description": "This API is used to unsubscribe to group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Unsubscribe Group To USer",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "description": "This API is used to update user profile like First Name, Last Name etc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User profile",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/update-group": {
            "post": {
                "description": "This API is used to update group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Update Group",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        },
        "/user/update-order": {
            "post": {
                "description": "This Api is used to update the order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update Order Value",
                "parameters": [
                    {
                        "description": "jsonResponse",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.jsonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AuthPayload": {
            "type": "object",
            "properties": {
                "otp": {
                    "description": "otp of the user which get in phone\nin: integer",
                    "type": "integer"
                },
                "phonenumber": {
                    "description": "phonenumber of the user\nin: integer",
                    "type": "integer"
                }
            }
        },
        "handler.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "authenticated": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "refresh_token_expires_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "handler.jsonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.renewAccessTokenRequests": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "model.CreateGroup": {
            "type": "object",
            "properties": {
                "groupname": {
                    "description": "name of the group\nin: string",
                    "type": "string"
                }
            }
        },
        "model.GroupUser": {
            "type": "object",
            "properties": {
                "groupid": {
                    "description": "id of the group\nin: uuid",
                    "type": "string"
                },
                "groupname": {
                    "description": "name of the group\nin: string",
                    "type": "string"
                }
            }
        },
        "model.InviteLink": {
            "type": "object",
            "properties": {
                "invitelink": {
                    "type": "string"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "fiatAmount": {
                    "type": "number"
                },
                "minAmount": {
                    "type": "number"
                },
                "orderid": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "timeLimit": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.OrderHandler": {
            "type": "object",
            "properties": {
                "fiatAmount": {
                    "type": "number"
                },
                "minAmount": {
                    "type": "number"
                },
                "orderid": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "timeLimit": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.OrderUser": {
            "type": "object",
            "properties": {
                "orderid": {
                    "description": "id of the order\nin: uuid",
                    "type": "string"
                }
            }
        },
        "model.TradeHandler": {
            "type": "object",
            "properties": {
                "bidUserid": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "orderid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tradeid": {
                    "type": "string"
                },
                "tradetime": {
                    "type": "integer"
                }
            }
        },
        "model.TradeHandlerUser": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "orderid": {
                    "type": "string"
                },
                "tradeid": {
                    "type": "string"
                },
                "tradetime": {
                    "type": "integer"
                }
            }
        },
        "model.TradeUser": {
            "type": "object",
            "properties": {
                "tradeid": {
                    "description": "id of the trade\nin: uuid",
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "first_name": {
                    "description": "first name of the user\nin: string",
                    "type": "string"
                },
                "last_name": {
                    "description": "last name of the user\nin: string",
                    "type": "string"
                },
                "phonenumber": {
                    "description": "phonenumber of the user\nin: integer",
                    "type": "integer"
                },
                "profile_pic": {
                    "description": "profile pic link of the user\nin: string",
                    "type": "string"
                },
                "userid": {
                    "description": "id of the user\nin: integer",
                    "type": "string"
                },
                "verified": {
                    "description": "Is users phone number verified\nin: boolean",
                    "type": "boolean"
                }
            }
        },
        "model.UserGroups": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "model.UserLogin": {
            "type": "object",
            "properties": {
                "phonenumber": {
                    "description": "phonenumber of the user\nin: integer",
                    "type": "integer"
                }
            }
        },
        "model.UserUpdate": {
            "type": "object",
            "properties": {
                "base64jpgimg": {
                    "description": "profile pic link of the user\nin: string",
                    "type": "string"
                },
                "first_name": {
                    "description": "first name of the user\nin: string",
                    "type": "string"
                },
                "last_name": {
                    "description": "last name of the user\nin: string",
                    "type": "string"
                },
                "phonenumber": {
                    "description": "phonenumber of the user\nin: integer",
                    "type": "integer"
                },
                "userid": {
                    "description": "id of the user\nin: integer",
                    "type": "string"
                },
                "verified": {
                    "description": "Is users phone number verified\nin: boolean",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
