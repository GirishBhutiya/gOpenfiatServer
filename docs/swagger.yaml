definitions:
  handler.AuthPayload:
    properties:
      otp:
        description: |-
          otp of the user which get in phone
          in: integer
        type: integer
      phonenumber:
        description: |-
          phonenumber of the user
          in: integer
        type: integer
    type: object
  handler.jsonResponse:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
  handler.renewAccessTokenRequests:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  model.CreateGroup:
    properties:
      groupname:
        description: |-
          name of the group
          in: string
        type: string
    type: object
  model.GroupUser:
    properties:
      groupid:
        description: |-
          id of the group
          in: uuid
        type: string
      groupname:
        description: |-
          name of the group
          in: string
        type: string
    type: object
  model.Order:
    properties:
      fiatAmount:
        type: number
      minAmount:
        type: number
      orderid:
        type: string
      price:
        type: number
      timeLimit:
        type: string
      type:
        type: string
    type: object
  model.OrderHandler:
    properties:
      fiatAmount:
        type: number
      minAmount:
        type: number
      orderid:
        type: string
      price:
        type: number
      timeLimit:
        type: integer
      type:
        type: string
      userid:
        type: string
    type: object
  model.OrderUser:
    properties:
      orderid:
        description: |-
          id of the order
          in: uuid
        type: string
    type: object
  model.TradeHandler:
    properties:
      bidUserid:
        type: string
      method:
        type: string
      orderid:
        type: string
      status:
        type: string
      tradeid:
        type: string
      tradetime:
        type: integer
    type: object
  model.TradeHandlerUser:
    properties:
      method:
        type: string
      orderid:
        type: string
      tradeid:
        type: string
      tradetime:
        type: integer
    type: object
  model.TradeUser:
    properties:
      tradeid:
        description: |-
          id of the trade
          in: uuid
        type: string
    type: object
  model.User:
    properties:
      first_name:
        description: |-
          first name of the user
          in: string
        type: string
      groups:
        additionalProperties:
          type: string
        type: object
      last_name:
        description: |-
          last name of the user
          in: string
        type: string
      phonenumber:
        description: |-
          phonenumber of the user
          in: integer
        type: integer
      profile_pic:
        description: |-
          profile pic link of the user
          in: string
        type: string
      userid:
        description: |-
          id of the user
          in: integer
        type: string
      verified:
        description: |-
          Is users phone number verified
          in: boolean
        type: boolean
    type: object
  model.UserGroups:
    properties:
      groups:
        additionalProperties:
          type: string
        type: object
    type: object
  model.UserLogin:
    properties:
      phonenumber:
        description: |-
          phonenumber of the user
          in: integer
        type: integer
    type: object
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      description: This API can be used as health check for this application.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: This API can be used as health check for this application.
      tags:
      - Brocker
  /login:
    post:
      consumes:
      - application/json
      description: Verify OTP which you get after register
      parameters:
      - description: LoginResponse
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.AuthPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Login
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: This API is used to register user with Phone number
      parameters:
      - description: jsonResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: This API is used to register user with Phone number
      tags:
      - User
  /renew-accesstoken:
    post:
      consumes:
      - application/json
      description: This API is used to renew accesstoken using refreshtoken which
        you will get in verifyotp API.
      parameters:
      - description: renewAccessTokenResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.renewAccessTokenRequests'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: This API is used to renew accesstoken using refreshtoken which you
        will get in verifyotp API.
      tags:
      - User
  /user/create-buy-order:
    post:
      consumes:
      - application/json
      description: Create a new order with status pending and type buy
      parameters:
      - description: model.OrderHandler
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/model.OrderHandler'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderHandler'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Create a new buy order
      tags:
      - Order
  /user/create-group:
    post:
      consumes:
      - application/json
      description: This API is used to create a new group
      parameters:
      - description: model.GroupUser
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.CreateGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Create A New Group
      tags:
      - Group
  /user/create-sell-order:
    post:
      consumes:
      - application/json
      description: Create a new order with status pending and type sell
      parameters:
      - description: model.OrderHandler
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/model.OrderHandler'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderHandler'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Create a new sell order
      tags:
      - Order
  /user/create-trade:
    post:
      consumes:
      - application/json
      description: This Api is used create a new trade
      parameters:
      - description: jsonResponse
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/model.TradeHandlerUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Create Trade
      tags:
      - Trade
  /user/delete-group:
    post:
      consumes:
      - application/json
      description: This API is used to delete group
      parameters:
      - description: jsonResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.GroupUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Delete Group
      tags:
      - Group
  /user/getgroups:
    post:
      consumes:
      - application/json
      description: This API is used to get all groups which are releted to user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserGroups'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Get All Groups
      tags:
      - User
  /user/getorders:
    post:
      consumes:
      - application/json
      description: This API is used to get all orders which are releted to user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Order'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Get All Orders
      tags:
      - Order
  /user/getordertrades:
    post:
      consumes:
      - application/json
      description: This API is used to get all trades which are releted to order
      parameters:
      - description: '[]model.TradeHandler'
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.OrderUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TradeHandler'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Get Order Trades
      tags:
      - Order
  /user/order-delete:
    post:
      consumes:
      - application/json
      description: Delete an order
      parameters:
      - description: jsonResponse
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/model.OrderUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Delete an order
      tags:
      - Order
  /user/subscribe:
    post:
      consumes:
      - application/json
      description: This API is used to subscribe to group
      parameters:
      - description: jsonResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.GroupUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Subscribe Group To USer
      tags:
      - User
  /user/trade-confirm:
    post:
      consumes:
      - application/json
      description: This Api is used to change the trade status to confirm
      parameters:
      - description: jsonResponse
        in: body
        name: trade
        required: true
        schema:
          $ref: '#/definitions/model.TradeUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: ConfirmTrade
      tags:
      - Trade
  /user/trade-confirming:
    post:
      consumes:
      - application/json
      description: This Apis is used to change the trade status to confirming
      parameters:
      - description: jsonResponse
        in: body
        name: trade
        required: true
        schema:
          $ref: '#/definitions/model.TradeUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: ConfirmingTrade
      tags:
      - Trade
  /user/trade-delete:
    post:
      consumes:
      - application/json
      description: Delete an trade
      parameters:
      - description: jsonResponse
        in: body
        name: trade
        required: true
        schema:
          $ref: '#/definitions/model.TradeUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Delete an trade
      tags:
      - Trade
  /user/trade-disputed:
    post:
      consumes:
      - application/json
      description: This API is used to change the trade status to disputed
      parameters:
      - description: jsonResponse
        in: body
        name: trade
        required: true
        schema:
          $ref: '#/definitions/model.TradeUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: DisputedTrade
      tags:
      - Trade
  /user/unsubscribe:
    post:
      consumes:
      - application/json
      description: This API is used to unsubscribe to group
      parameters:
      - description: jsonResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.GroupUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Unsubscribe Group To USer
      tags:
      - User
  /user/update:
    post:
      consumes:
      - application/json
      description: This API is used to update user profile like First Name, Last Name
        etc
      parameters:
      - description: jsonResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Update User profile
      tags:
      - User
  /user/update-group:
    post:
      consumes:
      - application/json
      description: This API is used to update group
      parameters:
      - description: jsonResponse
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.GroupUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Update Group
      tags:
      - Group
  /user/update-order:
    post:
      consumes:
      - application/json
      description: This Api is used to update the order
      parameters:
      - description: jsonResponse
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/model.OrderHandler'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.jsonResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.jsonResponse'
      summary: Update Order Value
      tags:
      - Order
swagger: "2.0"
